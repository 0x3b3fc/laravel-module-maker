<?php

namespace {{moduleNamespace}}\Livewire;

use Livewire\Component;
use Livewire\WithPagination;
use {{moduleNamespace}}\Models\{{module}};

class Index extends Component
{
    use WithPagination;

    public $search = '';
    public $confirmingDeletion = false;
    public $deletingId = null;

    protected $queryString = ['search'];

    /**
     * Delete a {{moduleLower}}.
     */
    public function delete($id)
    {
        $this->deletingId = $id;
        $this->confirmingDeletion = true;
    }

    /**
     * Confirm deletion.
     */
    public function confirmDelete()
    {
        ${{moduleLower}} = {{module}}::findOrFail($this->deletingId);
        ${{moduleLower}}->delete();

        $this->confirmingDeletion = false;
        $this->deletingId = null;

        session()->flash('success', '{{module}} deleted successfully.');
    }

    /**
     * Cancel deletion.
     */
    public function cancelDelete()
    {
        $this->confirmingDeletion = false;
        $this->deletingId = null;
    }

    /**
     * Reset search and pagination.
     */
    public function updatingSearch()
    {
        $this->resetPage();
    }

    /**
     * Render the component.
     */
    public function render()
    {
        ${{moduleLower}}s = {{module}}::query()
            ->when($this->search, function ($query) {
                $query->where('name', 'like', '%' . $this->search . '%')
                    ->orWhere('description', 'like', '%' . $this->search . '%');
            })
            ->latest()
            ->paginate(15);

        return view('{{moduleLower}}s::livewire.index', [
            '{{moduleLower}}s' => ${{moduleLower}}s,
        ]);
    }
}

